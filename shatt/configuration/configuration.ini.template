[MODEL]
PrintModelSummary = False

# Which model to run: hicoatt or baseline (default: baseline)
ModelType = shatt
ModelDerivateName = alpha

# Use the argmax for sampling the words (if false use categorical probability)
UseMaxSampler = True

# Percentage (between 0 and 1) of randomly selected network activations to be discarded
# This is applied after each layer
DropoutRate = 0.5

# Small value (default: 0.005)
AlphaRegularization = 0.01

# The maximal length of the questions (default : 16)
# This value is probably dataset related and can be determined with the prepare training script
# For MSCOCO 2014: train=57, validate=55, test=22
# For train with max length 16+1   : 414113 to 398773 (96.30%)
# For validate with max length 16+1: 202654 to 195294 (96.37%)
# This number must be set including the plus one for the end tag
CaptionMaximalLength = 16

# The vocabulary size is necessary to create the correct word embeddings for the questions
# This value is probably dataset related and can be determined with the prepare training script
# For only training
VocabularySize = 10000

# The encoded value for the start symbol
VocabularyStartSymbol = 3

# The expected image input shape. The image get resized to this shape.
ImageInputShape = (224, 224, 3)
#ImageInputShape = (448, 448, 3)

# The output layer of the VGG model to use as the feature maps
# block5_conv4 should be used for (224, 224, 3) image inputs
# block5_pool  should be used for (448, 448, 3) image inputs 
ImageOutputLayer = block5_conv4
#ImageOutputLayer = block5_pool

# The feature-map size of the visual features of the image feature extractor
# This value must be specified along with the ImageInputShape
# For example the feature-maps on 448 x 448 images are 14 x 14 = 196
# For example the feature-maps on 224 x 224 images are 7 x 7 = 49
ImageFeaturesSize = 49
#ImageFeaturesSize = 196

# Bypass the image input shape and expect image features as the input
# This is useful when using the same set of images repeately (default: False)
# The image feature maps are computed once and then served during use
ByPassImageFeaturesComputation = True

# Add a layer on top of the image features outputs
ImageTopLayer = False
ImageTopLayerDropoutRate = 0.0

[TRAINING]
# Determine which GPU to use. The default GPU is 0. For CPU only specify -1.
GpuDevices = 0

# The directory where the metrics will be written as tensorboard logs
TensorboardLoggingDirectory = C:/Development/apps/eclipse-java-2018-12/tensorboard/logs

# The number of epochs (default: 256)
Epochs = 256

# The batch size (default: 256)
BatchSize = 300

# If True, use process-based threading (default: False)
# Does not work well with Keras because out-of-memory problems are likely
# on Windows. Better use False and increase the number of worker
UseMultiProcessing = False

# Maximum number of processes to spin up when using process-based threading (default: 1)
# This also works without multi-processsing, but only with Sequences as generators
Workers = 10

# Maximal queues for training input generators (default: 10)
MaxQueueSize = 10

[DATASETS]
# The directory with the questions json file and the prepared vocabulary and labels file. 
# The dataset directory is supposed to contain dataset splits of train and validate 
# in sub directories with the following names: <dir_path>/train and <dir_path>/validate
TextualDatasetDirectoryPath = F:/Development/data/mscoco

# Whether to use nltk as a tokenizer or the keras one (default: True)
# When true, then nltk must be installed
PreparationUsingNltkTokenizer = True

# The directory with the image files identifiable by the image_id in the questions json file.
# The dataset directory is supposed to contain dataset splits of train and validate 
# in sub directories with the following names: <dir_path>/train and <dir_path>/validate
ImageDatasetDirectoryPath = C:/Development/data/mscoco

# The MSCOCO image name infixes e.g. COCO_<infix>_<imageid>
# Necessary to provide the inputs for training, validation and test
TrainingImageNameInfix = train2014
ValidationImageNameInfix = val2014
TestImageNameInfix = test2015

# Useful to show a progress bar on preparation
NumberOfTrainingImages = 82783
NumberOfValidationImages = 40504
NumberOfTestImages = 81434

# The bounding boxes width and height median (for e.g. validation split)
MedianBoxWidth = 54.45 
MedianBoxHeight = 62.85

# The batch size to use for preparation tasks, when not given as a run option
PreparationBatchSize = 100
